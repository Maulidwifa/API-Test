name: Postman Test Runner

on:
  schedule:
# #     - cron: '0 0 */4 * *'  # Menjalankan setiap 4 jam sekali pada waktu UTC
#     - cron: '30 5 * * 1,3'  # Menjalankan setiap Senin dan Rabu pukul 5:30 AM UTC
#     - cron: '30 5 * * 2,4'  # Menjalankan setiap Selasa dan Kamis pukul 5:30 AM UTC
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  postman-test:
    runs-on: ubuntu-latest

    steps:
      # Langkah 1: Checkout kode dari repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Langkah 2: Setup Node.js untuk install Newman
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Langkah 4: Setup Python dan install dependencies (untuk SendGrid)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.5'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sendgrid

      # Langkah 5: Jalankan Newman untuk tes dan buat laporan
      - name: Run Newman tests
        run: |
          newman run User_Management.postman_collection.json \
          --environment Dev.postman_environment.json \
          --reporters cli,json \
          --reporter-json-export newman-report.json

      - name: Set status message based on Newman result
        id: status_message
        run: |
          # Cek apakah file `newman-report.json` ada
          if [ -f newman-report.json ]; then
            RESULT=$(cat newman-report.json)
            PASSED=$(echo $RESULT | jq '.run.stats.assertions.passed')
            FAILED=$(echo $RESULT | jq '.run.stats.assertions.failed')

            if [ "$FAILED" -gt 0 ]; then
              # Jika ada test yang gagal, tampilkan pesan error
              STATUS="Test Failed"
              ERROR_DETAILS=$(echo $RESULT | jq '.run.failures')
            else
              # Jika semua test berhasil, tampilkan pesan success
              STATUS="Success"
              ERROR_DETAILS="All tests passed successfully."
            fi

            # Simpan status dan detail error
            echo "STATUS=$STATUS" >> $GITHUB_ENV
            echo "ERROR_DETAILS=$ERROR_DETAILS" >> $GITHUB_ENV
          else
            echo "Error: File newman-report.json not found!"
            exit 1
          fi

      - name: Send email notification via SendGrid
        run: |
          response=$(curl -X POST https://api.sendgrid.com/v3/mail/send \
            -H "Authorization: Bearer ${{ secrets.MAULID_APIKEYSENDGRID }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "personalizations": [
                    {
                      "to": [{"email": "maulidwifairuz@gmail.com"}],
                      "subject": "Postman Test Results"
                    }
                  ],
                  "from": {"email": "${{ secrets.SENDGRID_EMAIL }}"},
                  "content": [
                    {
                      "type": "text/plain",
                      "value": "The Postman tests have completed. Status: ${{ env.STATUS }}.\nDetails: ${{ env.ERROR_DETAILS }}"
                    }
                  ]
                }')
      
          echo "Response from SendGrid: $response"
          # Jika perlu, tampilkan status code HTTP
          echo "HTTP Status Code: $(echo $response | jq -r '.statusCode')"


# name: CI/CD with Postman and SendGrid

# on:
#   schedule:
#     # - cron: '*/5 * * * *'  # Menjalankan setiap 5 menit sekali
#     - cron: '0 0 */4 * *'  # Menjalankan setiap 4 jam sekali pada waktu UTC
#     # - cron: '30 5 * * 1,3'  # Menjalankan setiap Senin dan Rabu pukul 5:30 AM UTC
#     # - cron: '30 5 * * 2,4'  # Menjalankan setiap Selasa dan Kamis pukul 5:30 AM UTC
#   push:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '16'

#       - name: Install Newman globally
#         run: npm install -g newman

#       - name: Run Postman tests with Newman
#         run: |
#           newman run Test.postman_collection.json --environment Development.postman_environment.json --reporters cli,json --reporter-json-export newman-report.json
#         id: newman_run

#       - name: Debug if `newman-report.json` exists
#         run: |
#           if [ -f newman-report.json ]; then
#             echo "File newman-report.json exists"
#             cat newman-report.json
#           else
#             echo "File newman-report.json does not exist!"
#           fi

#       - name: Set status message based on Newman result
#         id: status_message
#         run: |
#           # Cek apakah file `newman-report.json` ada
#           if [ -f newman-report.json ]; then
#             RESULT=$(cat newman-report.json)
#             PASSED=$(echo $RESULT | jq '.run.stats.assertions.passed')
#             FAILED=$(echo $RESULT | jq '.run.stats.assertions.failed')

#             if [ "$FAILED" -gt 0 ]; then
#               # Jika ada test yang gagal, tampilkan pesan error
#               STATUS="Test Failed"
#               ERROR_DETAILS=$(echo $RESULT | jq '.run.failures')
#             else
#               # Jika semua test berhasil, tampilkan pesan success
#               STATUS="Success"
#               ERROR_DETAILS="All tests passed successfully."
#             fi

#             # Simpan status dan detail error
#             echo "STATUS=$STATUS" >> $GITHUB_ENV
#             echo "ERROR_DETAILS=$ERROR_DETAILS" >> $GITHUB_ENV
#           else
#             echo "Error: File newman-report.json not found!"
#             exit 1
#           fi

#       - name: Send email notification via SendGrid
#         run: |
#           response=$(curl -X POST https://api.sendgrid.com/v3/mail/send \
#             -H "Authorization: Bearer ${{ secrets.MAULID_APIKEYSENDGRID }}" \
#             -H "Content-Type: application/json" \
#             -d '{
#                   "personalizations": [
#                     {
#                       "to": [{"email": "maulidwifairuz@gmail.com"}],
#                       "subject": "Postman Test Results"
#                     }
#                   ],
#                   "from": {"email": "${{ secrets.SENDGRID_EMAIL }}"},
#                   "content": [
#                     {
#                       "type": "text/plain",
#                       "value": "The Postman tests have completed. Status: ${{ env.STATUS }}. Details: ${{ env.ERROR_DETAILS }}"
#                     }
#                   ]
#                 }')
      
#           echo "Response from SendGrid: $response"
#           # Jika perlu, tampilkan status code HTTP
#           echo "HTTP Status Code: $(echo $response | jq -r '.statusCode')"
